//SPDX-License-Identifier: Unlicense
pragma solidity ^0.8.0;
// ERC20
import "../lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol";
// 2771 context
import "../lib/openzeppelin-contracts/contracts/metatx/ERC2771Context.sol";
// multicall
import "./Multicall.sol";

contract ThirdWebSimpleERC20 is ERC20, ERC2771Context, Multicall {
    constructor(
        string memory name_,
        string memory symbol_,
        address trustedForwarder_
    ) ERC20(name_, symbol_) ERC2771Context(trustedForwarder_) {}

    function mint(address to, uint256 amount) external {
        _mint(to, amount);
    }

    function _msgSender() internal view override(Context, ERC2771Context) returns (address sender) {
        return ERC2771Context._msgSender();
    }

    function _msgData() internal view override(Context, ERC2771Context) returns (bytes calldata) {
        return ERC2771Context._msgData();
    }

    function _contextSuffixLength() internal pure override(ERC2771Context,Context) returns (uint256) {
        return 20;
    }
}

